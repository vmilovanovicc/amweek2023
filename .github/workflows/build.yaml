name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest  
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"      

      - name: Install staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2022.1.3"

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      matrix:
        go-version: [ '1.19', '1.20' ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
           go-version: ${{ matrix.go-version }}
      # Test your matrix by printing the current Go version
      - name: Display Go version
        run: go version      

      - name: Run Unit tests and generate test coverage report
        run: |
          go test -v ./... -coverprofile=coverage.out
          cat coverage.out >> coverage.txt         

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        run: | 
          go build -o build/myapp random/greetings
